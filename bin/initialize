#!/bin/bash -e
#
# DMC Bootstrap Script
########################################################################

import() {
	[ -n "$VERBOSE" ] && echo "# docker volume create --name $SHARE"
	docker volume create --name "$SHARE"
	[ -n "$VERBOSE" ] && echo "# docker create -v $SHARE:$DESTINATION --name $SHARE $IMAGE /bin/true"
	docker create -v "$SHARE:$DESTINATION" --name "$SHARE" "$IMAGE" /bin/true
	[ -n "$VERBOSE" ] && echo "# docker run --rm --volumes-from $SHARE -v $(pwd):/host $IMAGE rsync -r $SOURCE/ $DESTINATION/"
	docker run --rm --volumes-from "$SHARE" -v $(pwd):/host "$IMAGE" rsync -a "$SOURCE/" "$DESTINATION/"
	[ -n "$VERBOSE" ] && echo "# docker volume inspect $SHARE" && docker volume inspect "$SHARE" || true
}

shares() {
	if [ -n "$SHARES" ]; then
		for SHARE in ${SHARES[@]}; do
			if [ -n "$VERBOSE" ]; then
				echo "Importing ./$SHARE filesystem ..."
				SOURCE="/host/$SHARE" DESTINATION="/opt/$APPLICATION/$SHARE" IMAGE="$APPLICATION:node" import
			else
				SOURCE="/host/$SHARE" DESTINATION="/opt/$APPLICATION/$SHARE" IMAGE="$APPLICATION:node" import &>/dev/null
			fi
		done
	fi
}


# source configuration
. bin/env

# remove all containers, images, networks, volumes
bin/purge

# build shared volume containers
docker-compose -f docker-environment.yml build
shares
