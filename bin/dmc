#!/bin/bash
#
# Docker Management Console
########################################################################
while [ "$#" -gt 0 ]; do
	case "$1" in
		build|-b|--build) COMMAND=build; shift 1;;
		drop|-d|--drop) COMMAND=drop; shift 1;;
		follow|-f|--follow) COMMAND=follow; shift 1;;
		help|-h|--help) COMMAND=help; shift 1;;
		purge|-p|--purge) COMMAND=purge; shift 1;;
		query|-q|--query) COMMAND=query; shift 1;;
		reset|-r|--reset) COMMAND=reset; shift 1;;
		shell|-e|--shell) COMMAND=shell; shift 1;;
		start|-a|--start) COMMAND=start; shift 1;;

		-c) CONTAINER="$2"; [ "$#" -gt 1 ] && shift 2 || shift 1;;
		-i) IMAGE="$2"; [ "$#" -gt 1 ] && shift 2 || shift 1;;
		-s) SERVICE="$2"; [ "$#" -gt 1 ] && shift 2 || shift 1;;
		-t) TAG="$2"; [ "$#" -gt 1 ] && shift 2 || shift 1;;
		-v) VOLUME="$2"; [ "$#" -gt 1 ] && shift 2 || shift 1;;

		--container=*) CONTAINER="${1#*=}"; shift 1;;
		--image=*) IMAGE="${1#*=}"; shift 1;;
		--service=*) SERVICE="${1#*=}"; shift 1;;
		--tag=*) TAG="${1#*=}"; shift 1;;
		--volume=*) VOLUME="${1#*=}"; shift 1;;

		--container|--image|--service|--tag|--volume) echo "$1 requires an argument" >&2; exit 1;;
		-*) echo "unknown option: $1" >&2; exit 1;;
		*) echo "unknown argument: $1" >&2; exit 1;;
	esac
done

[ -z "$COMMAND" ] && COMMAND=help
[ -z "$CONTAINER" ] && CONTAINER=core
[ -z "$IMAGE" ] && IMAGE=gurumojo
[ -z "$SERVICE" ] && SERVICE=mock
[ -z "$TAG" ] && TAG=latest
[ -z "$VOLUME" ] && VOLUME=storage

drop() {
	docker kill $1
	docker rm -f $1
}

case "$COMMAND" in
	build)
		cd $SERVICE && docker build --rm -t $IMAGE:$TAG .
	;;

	drop)
		drop $CONTAINER &>/dev/null
	;;

	follow)
		docker logs --tail 0 -f $CONTAINER
	;;

	purge)
		drop $CONTAINER &>/dev/null
		docker rmi -f $(docker images -a | grep '<none>' | awk '{print $3}') 2>/dev/null
	;;

	query)
		echo
		docker info
		echo
		docker images -a
		echo
		docker ps -a
		echo
	;;

	reset)
		drop $CONTAINER &>/dev/null
		docker run --name=$CONTAINER -d -v $VOLUME:/opt/gurumojo -p 80:8080 $IMAGE:$TAG
	;;

	shell)
		docker exec -it $CONTAINER bash
	;;

	start)
		docker run --name=$CONTAINER -d -v $VOLUME:/opt/gurumojo -p 80:8080 $IMAGE:$TAG
	;;

	help)
	;&
	*)
		echo
		echo "Usage:"
		echo "	# $0 [ -a | -b | -d | -e | -f | -h | -p | -q | -r ] \\"
		echo "	>	[ -c <...> | --container=<...> ] \\"
		echo "	>	[ -i <...> | --image=<...> ] \\"
		echo "	>	[ -s <...> | --service=<...> ] \\"
		echo "	>	[ -t <...> | --tag=<...> ] \\"
		echo "	>	[ -v <...> | --volume=<...> ]"
		echo
		echo "Commands:"
		echo "	-a 	--start		activate a named mount container"
		echo "	-b 	--build		create a tagged mount image"
		echo "	-d 	--drop		disable a named mount container"
		echo "	-e 	--shell		execute bash on a container"
		echo "	-f 	--follow	print logs from a container"
		echo "	-h 	--help		show this usage information"
		echo "	-p 	--purge		destroy a named mount container"
		echo "	-q 	--query		show images and containers"
		echo "	-r 	--reset		replace a named mount container"
		echo
		echo "Options:"
		echo "	-c	--container	$CONTAINER"
		echo "	-i	--image		$IMAGE"
		echo "	-s	--service	$SERVICE"
		echo "	-t	--tag		$TAG"
		echo "	-v	--volume	$VOLUME"
		echo
	;;
esac
