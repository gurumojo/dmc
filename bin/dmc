#!/bin/bash
#
# Docker Management Console
########################################################################
while [ "$#" -gt 0 ]; do
	case "$1" in
		build|-b|--build) COMMAND=build; shift 1;;
		help|-h|--help) COMMAND=help; shift 1;;
		purge|-x|--purge) COMMAND=purge; shift 1;;
		reset|-r|--reset) COMMAND=reset; shift 1;;
		shell|-e|--shell) COMMAND=shell; shift 1;;
		start|-a|--start) COMMAND=start; shift 1;;
		status|-s|--status) COMMAND=status; shift 1;;

		-c) CONTAINER="$2"; [ "$#" -gt 1 ] && shift 2 || shift 1;;
		-i) IMAGE="$2"; [ "$#" -gt 1 ] && shift 2 || shift 1;;
		-m) MOUNT="$2"; [ "$#" -gt 1 ] && shift 2 || shift 1;;
		-t) TAG="$2"; [ "$#" -gt 1 ] && shift 2 || shift 1;;

		--container=*) CONTAINER="${1#*=}"; shift 1;;
		--image=*) IMAGE="${1#*=}"; shift 1;;
		--mount=*) MOUNT="${1#*=}"; shift 1;;
		--tag=*) TAG="${1#*=}"; shift 1;;

		--container|--image|--mount|--tag) echo "$1 requires an argument" >&2; exit 1;;
		-*) echo "unknown option: $1" >&2; exit 1;;
		*) echo "unknown argument: $1"; >&2; exit 1;;
	esac
done

[ -z "$COMMAND" ] && COMMAND=help
[ -z "$CONTAINER" ] && CONTAINER=core
[ -z "$IMAGE" ] && IMAGE=gurumojo
[ -z "$MOUNT" ] && MOUNT=~mpl/src/dmc
[ -z "$TAG" ] && TAG=0.0.0

case "$COMMAND" in
	build)
		docker build --rm -t $IMAGE:latest -t $IMAGE:$TAG .
		;;
	purge)
		docker kill $CONTAINER &>/dev/null
		docker rm $CONTAINER &>/dev/null
		docker rmi -f `docker images -a | grep '<none>' | awk '{print $3}'` 2>/dev/null
		;;
	reset)
		docker kill $CONTAINER &>/dev/null
		docker rm $CONTAINER &>/dev/null
		docker run --name=$CONTAINER -d -v $MOUNT:/opt/gurumojo $IMAGE:$TAG
		;;
	shell)
		docker exec -it $CONTAINER bash
		;;
	start)
		docker run --name=$CONTAINER -d -v $MOUNT:/opt/gurumojo $IMAGE:$TAG
		;;
	status)
		echo
		docker images -a
		echo
		docker ps -a
		echo
		;;
	help)
		;&
	*)
		echo
		echo "Usage:"
		echo "	# $0 <command> \\"
		echo "	> [ -c <container> || --container=<container> ] [ -i <image> || --image=<image> ] \\"
		echo "	> [ -m <mount> || --mount=<mount> ] [ -t <tag> || --tag=<tag> ] [ -v || --verbose ]"
		echo
		echo "Commands:"
		echo "	-a 	--start		activate a named mount container"
		echo "	-b 	--build		create a tagged mount image"
		echo "	-e 	--shell		execute bash on a container"
		echo "	-h 	--help		show this usage information"
		echo "	-r 	--reset		replace a named mount container"
		echo "	-s 	--status	show images and containers"
		echo "	-x 	--purge		destroy a named mount container"
		echo
		echo "Defaults:"
		echo "	-c	--container	$CONTAINER"
		echo "	-i	--image		$IMAGE"
		echo "	-m	--mount		$MOUNT"
		echo "	-t	--tag		$TAG"
		echo
		echo "Options:"
		echo "	-v 	--verbose	increase log detail"
		echo
		exit 1
		;;
esac

